[tool.poetry]
name = "pynteracta"
version = "0.1.6"
description = "A wrapper for Interacta API"
license = "BSD-3-Clause"
authors = ["Simone Dalla <simodalla@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/simodalla/pynteracta"
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
]
packages = [{ include = "pynteracta", from = "src" },]

[tool.poetry.scripts]
pynteracta = "pynteracta.main:app"

[tool.poetry.dependencies]
python = "^3.11"
requests = "^2.28.1"
typer = "^0.9.0"
pydantic = "^1.10.4"
pyjwt = {extras = ["crypto"], version = "^2.6.0"}


[tool.poetry.group.dev.dependencies]
ipdb = "^0.13.9"
pytest = "^7.1"
pip-tools = "^6.9.0"
flake8 = "^6.0.0"
flake8-isort = "^6.0.0"
coverage = "^7.0.0"
black = "^23.0"
pylint = "^2.15.4"
pre-commit = "^3.0"
bumpver = "^2022.1118"
bandit = "^1.7.4"
pytest-cov = "^4.0.0"
mypy = "^1.0"
types-requests = "^2.28.11.2"
pytest-xdist = "^3.2.0"
pytest-sugar = "^0.9.6"
pytest-mock = "^3.10.0"
time-machine = "^2.9.0"
responses = "^0.22.0"
faker = "^16.8.1"


[tool.poetry.group.pytest.dependencies]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.bumpver]
current_version = "0.1.6"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message  = "bump version {old_version} -> {new_version}"
commit          = true
tag             = true
push            = false

    [tool.bumpver.file_patterns]
    "pyproject.toml" = [
        'current_version = "{version}"',
        'version = "{version}"',
    ]
    "src/pynteracta/__init__.py" = ["{version}"]
    "src/pynteracta/__main__.py" = ["- pynteracta v{version}"]

[tool.isort]
profile = "black"
default_section = "THIRDPARTY"
known_first_party = ["pynteracta"]
known_django = "django"
sections = ["FUTURE","STDLIB","THIRDPARTY", "DJANGO", "FIRSTPARTY","LOCALFOLDER"]
skip_glob = ["**/migrations/*.py"]


[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \._venv
    | _build
    | buck-out
    | build
    | dist
    | migrations
    | demo
    | \.sh
  )
)
'''
